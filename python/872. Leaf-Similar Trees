# Consider all the leaves of a binary tree.  From left to right order, the values of those leaves form a leaf value sequence.



# For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

# Two binary trees are considered leaf-similar if their leaf value sequence is the same.

# Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

 

# Note:

# Both of the given trees will have between 1 and 100 nodes.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def leafSimilar(self, root1, root2):
        list1 = []
        list2 = []
        self.in_order(root1, list1)
        self.in_order(root2, list2)
        return list1 == list2
    
    def in_order(self,root, leaf_list):
        if(root.left == None and root.right == None):
            leaf_list.append(root.val)
        if(root.left != None):
            self.in_order(root.left, leaf_list)
        if(root.right != None):
            self.in_order(root.right, leaf_list)
