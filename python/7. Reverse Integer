Given a 32-bit signed integer, reverse digits of an integer.

# Example 1:

# Input: 123
# Output: 321
# Example 2:

# Input: -123
# Output: -321
# Example 3:

# Input: 120
# Output: 21
# Note:
# Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

class Solution(object):
    def reverse(self, x):
        number = list(str(x))
        lens = len(number)
        if number[0] == '-':
            start = 1
        else:
            start = 0
        while (lens - start) and not number[lens - 1]:
            lens -= 1
        result = ''
        if start:
            result += '-'
        while (lens - start):
            result += number[lens - 1]
            lens -= 1
        result = int(result)
        if result > 2**31 - 1 or result < -2**31:
            result = 0
        return result
